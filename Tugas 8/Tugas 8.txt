import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner input = new Scanner(System.in);
        Magician magic= new Magician(10, 60, 100);
        Healer heal = new Healer(10, 10, 70);
        Warrior warrior = new Warrior(30, 40, 100);
        Titan titan = new Titan(0, 45, 200);

        System.out.println("Selamat datang di game Defend FILKOM !");
        System.out.print("Silahkan masukkan nama player : ");
        String player = input.nextLine();
        int choose = 0;
        do{
            try{
                System.out.println("Silahkan pilih karakter yang anda inginkan :");
                String[] Role = {"1. Magician", "2. Healer", "3. Warrior"};
                for(String karakter : Role) {
                    System.out.println(karakter);
                }
                choose = input.nextInt();

                if (choose < 1 || choose > 3) throw new NumberFormatException();
            }catch (Exception e){
                if(e instanceof NumberFormatException) {
                    System.out.println("Masukan angka 1 - 3");
                }
                else{
                    System.err.println("Tolong masukkan angka !!!");
                    input.next();
                }
            }
        }while (choose == 0);
        System.out.println("Selamat datang, " + player + " !");

        switch(choose){
            case 1 :
                int i = 1;
                magic.info();
                while(magic.getHp() != 0 && titan.getHp() != 0){
                    System.out.println("--------------" + " TURN " + i + " --------------");

                    if(magic.attack()){
                        titan.receiveDamage(magic.getAttack());
                    }
                    if(titan.attack()){
                        magic.receiveDamage(titan.getAttack());
                    }
                    System.out.println("Enemy's HP\t: " + titan.getHp());
                    System.out.println(player +"'s HP\t: " + magic.getHp());
                    i++;
                }
                System.out.println("------------------------------------");
                if(titan.getHp() == 0) {
                    System.out.println(player + " menang\n");
                }
                if(magic.getHp() == 0) {
                    System.out.println("Titan menang\n");
                }
                System.out.println("============== PLAYER ==============");
                magic.info();
                System.out.println();
                System.out.println("============== MUSUH ==============");
                titan.info();
                break;

            case 2 :
                int j = 1;
                heal.info();
                while(heal.getHp() != 0 && titan.getHp() != 0){
                    System.out.println("--------------" + " TURN " + j + " --------------");
                    if(j % 2 == 0) {
                        heal.Heal();
                    }
                    if(heal.attack()){
                        titan.receiveDamage(heal.getAttack());
                    }
                    if(titan.attack()){
                        heal.receiveDamage(titan.getAttack());
                    }
                    System.out.println("Enemy's HP\t: " + titan.getHp());
                    System.out.println(player +"'s HP\t: " + heal.getHp());
                    j++;
                }
                System.out.println("------------------------------------");
                if(titan.getHp() == 0) System.out.println(player + " menang\n");
                if(heal.getHp() == 0) System.out.println("Titan menang\n");
                System.out.println("============== PLAYER ==============");
                heal.info();
                System.out.println();
                System.out.println("============== MUSUH ==============");
                titan.info();
                break;

            case 3 :
                int k = 1;
                warrior.info();
                while(warrior.getHp() != 0 && titan.getHp() != 0){
                    System.out.println("--------------" + " TURN " + k + " --------------");
                    if(warrior.attack()){
                        titan.receiveDamage(warrior.getAttack());
                    }
                    if(titan.attack()){
                        warrior.receiveDamage(titan.getAttack());

                    }
                    System.out.println("Enemy's HP\t: " + titan.getHp());
                    System.out.println(player +"'s HP\t: " + warrior.getHp());
                    k++;
                }
                System.out.println("------------------------------------");
                if(titan.getHp() == 0) System.out.println(player + " menang\n");
                if(warrior.getHp() == 0) System.out.println("Titan menang\n");
                System.out.println("============== PLAYER ==============");
                warrior.info();
                System.out.println();
                System.out.println("============== MUSUH ==============");
                titan.info();
                break;
        }
    }

}


abstract class Character{
    private int defense;
    private int attack;
    private int HP;

    Character(int defense,int attack,int HP){
        this.defense = defense;
        this.attack = attack;
        this.HP = HP;
    }

    public abstract boolean attack();

    public void receiveDamage(int damage){
        if(damage > defense){
            this.HP = (HP + defense) - damage;
            if(this.HP <= 0){
                HP = 0;
            }
        }
    }

    public void info(){
        System.out.println("------------- STATUS -------------" + "\nROLE\t: " + getClass().getSimpleName() + "\nHP\t\t: " + getHp() + "\nATTACK\t: " + getAttack() + "\nDEFENSE\t: " + getDefense());
    }

    public int getDefense(){
        return this.defense;
    }

    public int getAttack(){
        return this.attack;
    }

    public int getHp(){
        return this.HP;
    }

    public void setDefense(int defense){
        System.out.println(this.defense);
    }

    public void setAttack(int attack){
        System.out.println(this.attack);
    }

    public void setHp(int HP){
        System.out.println(this.HP);
    }
}


class Titan extends Character{
    private int defense;
    private int attack;
    private int HP;

    Titan(int defense, int attack, int HP){
        super(defense, attack, HP);
        this.defense = defense;
        this.attack = attack;
        this.HP = HP;
    }

    public boolean attack(){
        double Hit = Math.random();
        if(Hit < 0.40) {
            return true;
        }
        return false;
    }
}


class Warrior extends Character{
    private int defense;
    private int attack;
    private int HP;

    Warrior(int defense, int attack, int HP){
        super(defense, attack, HP);
        this.defense = defense;
        this.attack = attack;
        this.HP = HP;
    }

    public boolean attack(){
        double Hit = Math.random();
        if(Hit < 0.6) {
            return true;
        }
        return false;
    }
}


class Magician extends Character{
    private int defense;
    private int attack;
    private int HP;

    Magician(int defense, int attack, int HP){
        super(defense, attack, HP);
        this.defense = defense;
        this.attack = attack;
        this.HP = HP;
    }

    public boolean attack(){
        double Hit = Math.random();
        if(Hit < 0.35){
            return true;
        }
        return false;
    }
}


class Healer extends Character{
    private int defense;
    private int attack;
    private int HP;

    Healer(int defense, int attack, int HP){
        super(defense, attack, HP);
        this.defense = defense;
        this.attack = attack;
        this.HP = HP;
    }

    public boolean attack(){
        double Hit = Math.random();
        if(Hit < 0.85) {
            return true;
        }
        return false;
    }

    public void Heal(){
        System.out.println("Menggunakan Skill Heal.");
    }

    public int getHp(){
        return this.HP + 25;
    }

    public void setHp(int HP){
        System.out.println(this.HP);
    }
}